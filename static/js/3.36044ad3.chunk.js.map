{"version":3,"sources":["components/Content/Content.module.css","components/Content/MyPosts/MyPosts.module.css","components/Content/MyPosts/Posts/Post.module.css","components/Content/MyPosts/Posts/Post.js","components/Content/MyPosts/MyPosts.js","components/Content/MyPosts/MyPostsContaner.js","components/Content/ProfileStatusWithHooks.js","components/Content/Content.js","components/Content/ContentContaner.js"],"names":["module","exports","Post","props","className","Class","item","src","message","MaxLength10","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","name","placeholder","validate","required","MyPosts","React","memo","myPostsBlock","formData","addPost","newPost","myPosts","posts","map","post","text","key","id","PureComponent","MyPostsContaner","connect","state","profilePage","newPostState","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateUserStatus","autoFocus","Content","profile","store","content","profileDescription","photos","large","cont","Preloader","ContentContaner","userId","this","match","params","history","push","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,mBAAqB,sC,oBCApED,EAAOC,QAAU,CAAC,aAAe,8BAA8B,QAAU,2B,oBCAzED,EAAOC,QAAU,CAAC,KAAO,qB,gMCiBVC,EAdF,SAACC,GAEV,OAEI,yBAAKC,UAAWC,IAAMC,MAClB,yBAAKC,IAAI,iFACRJ,EAAMK,QACP,6BACI,yC,iCCLVC,EAAcC,YAAiB,IAe/BC,EAAgBC,YAAU,CAACC,KAAM,QAAjBD,EAbL,SAACT,GACd,OACI,0BAAMW,SAAUX,EAAMY,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,UAAUC,YAAY,YAAYC,SAAU,CAACC,IAAUb,MAE5F,6BACI,4CAYVc,EAAUC,IAAMC,MAAK,SAAAtB,GAMvB,OACI,yBAAMC,UAAWC,IAAMqB,cACnB,wCACA,kBAACf,EAAD,CAAeG,SAPN,SAACa,GACdxB,EAAMyB,QAAQD,EAASE,YAOnB,yBAAKzB,UAAWC,IAAMyB,SACjB3B,EAAM4B,MAAMC,KAAI,SAACC,GACd,OAAO,kBAAC,EAAD,CAAMzB,QAASyB,EAAKC,KAAMC,IAAKF,EAAKG,aAqChDb,GA5BYC,IAAMa,cA4BlBd,GCvDAe,EAFSC,aAfF,SAACC,GACnB,MAAO,CACHT,MAAOS,EAAMC,YAAYV,MACzBW,aAAcF,EAAMC,YAAYC,iBAIf,SAACC,GACtB,MAAO,CACHf,QAAS,SAACC,GACNc,EAASC,YAAqBf,QAKlBU,CAA6ChB,G,SC2BtDsB,G,OA5CgB,SAAC1C,GAAU,MAOR2C,oBAAS,GAPD,mBAOjCC,EAPiC,KAOvBC,EAPuB,OAQZF,mBAAS3C,EAAM8C,QARH,mBAQjCA,EARiC,KAQzBC,EARyB,KAUtCC,qBAAU,WACND,EAAU/C,EAAM8C,UACjB,CAAC9C,EAAM8C,SAeV,OACI,8BACMF,GACE,6BACI,0BAAMK,cAjBC,WACnBJ,GAAY,KAgByC7C,EAAM8C,QAAU,cAGhEF,GACG,6BACI,2BAAOM,SAbF,SAACC,GAClBJ,EAAUI,EAAEC,cAAcC,QAYmBC,OAlBxB,WACrBT,GAAY,GACZ7C,EAAMuD,iBAAiBT,IAgBkDU,WAAW,EAAMH,MAAOP,QCX1FW,EAtBC,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,QAASZ,EAAqC,EAArCA,OAAQS,EAA6B,EAA7BA,iBAAkBI,EAAW,EAAXA,MACjD,OAAID,EAKA,yBAAKzD,UAAWC,IAAM0D,SAIrB,yBAAK3D,UAAWC,IAAM2D,oBAClB,yBAAKzD,IAAKsD,EAAQI,OAAOC,QACzB,kBAAC,EAAD,CAAwBjB,OAAQA,EAAQS,iBAAkBA,KAE9D,yBAAKtD,UAAWC,IAAM8D,MACnB,kBAAC,EAAD,CAAiBL,MAAOA,MAbrB,kBAACM,EAAA,EAAD,O,eCCTC,E,kLAGE,IAAIC,EAASC,KAAKpE,MAAMqE,MAAMC,OAAOH,OACjCA,IACAA,EAASC,KAAKpE,MAAMmE,SAEhBC,KAAKpE,MAAMuE,QAAQC,KAAK,UAGhCJ,KAAKpE,MAAMyE,eAAeN,GAC1BC,KAAKpE,MAAM0E,cAAcP,K,+BAKzB,OAAO,kBAAC,EAAD,iBAAcC,KAAKpE,MAAnB,CAA0B0D,QAASU,KAAKpE,MAAM0D,QAASZ,OAAQsB,KAAKpE,MAAM8C,OAAQS,iBAAkBa,KAAKpE,MAAMuD,wB,GAhBhGlC,IAAMsD,WAgCrBC,4BAAQxC,aAbD,SAACC,GAAD,MAAY,CAC9BqB,QAASrB,EAAMC,YAAYoB,QAC3BZ,OAAQT,EAAMC,YAAYQ,OAC1BqB,OAAQ9B,EAAMwC,KAAKV,OACnBW,OAAQzC,EAAMwC,KAAKC,UASyB,CAACL,mBAAgBC,kBAAenB,uBAAoBwB,IAArFH,CAAiGV","file":"static/js/3.36044ad3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"Content_cont__3IsTd\",\"profileDescription\":\"Content_profileDescription__1mzf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsBlock\":\"MyPosts_myPostsBlock__2yNE7\",\"myPosts\":\"MyPosts_myPosts__3Mpgk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1q_g_\"};","import React, { useState } from 'react' \r\nimport Class from './Post.module.css'\r\n\r\n\r\nconst Post = (props) => {\r\n    let like = 1;\r\n    return(\r\n        \r\n        <div className={Class.item}> \r\n            <img src='https://i.pinimg.com/originals/3d/b7/7d/3db77df2a496f33b09c1861acc7a7b1c.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport Class from './MyPosts.module.css'\r\nimport Post from './Posts/Post'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { TextArea } from '../../common/FormsControl/Forms-control';\r\n\r\nconst MaxLength10 = maxLengthCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name=\"newPost\" placeholder=\"Post text\" validate={[required, MaxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({form: 'post'})(PostForm)\r\n\r\n\r\n\r\n// два примера компонент с умной перерисовкой VirtualDOM\r\n\r\nconst MyPosts = React.memo(props => { // функциональная компонента обернутая в хок который применяет фунцию propsAreEqual которая сравнивает изменился ли state или props\r\n\r\n    const OnSubmit = (formData) => {\r\n        props.addPost(formData.newPost);\r\n    }\r\n\r\n    return (\r\n        < div className={Class.myPostsBlock}>\r\n            <h3>My posts</h3>\r\n            <PostReduxForm onSubmit={OnSubmit}/>\r\n            <div className={Class.myPosts}>\r\n                {props.posts.map((post)=> {\r\n                    return <Post message={post.text} key={post.id}/>\r\n                })}\r\n                \r\n            </div>\r\n         </div>\r\n         \r\n    )\r\n})\r\n\r\nclass MyPostsClass extends React.PureComponent { // PureComponent - автоматически запускает функцию shouldComponentUpdate и сравнивает изменился ли state или props\r\n\r\n    /*shouldComponentUpdate(nextProps, nextState) {                    \r\n        return nextProps != this.props || nextState != this.state\r\n    }*/\r\n\r\n    render() {\r\n\r\n        const OnSubmit = (formData) => {\r\n            this.props.addPost(formData.newPost);\r\n        }\r\n\r\n        return (\r\n            < div className={Class.myPostsBlock}>\r\n                <h3>My posts</h3>\r\n                <PostReduxForm onSubmit={OnSubmit}/>\r\n                <div className={Class.myPosts}>\r\n                    {this.props.posts.map((post)=> {\r\n                        return <Post message={post.text} key={post.id}/>\r\n                    })}\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, newPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostState: state.profilePage.newPostState\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContaner = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContaner","import React, { useEffect, useState } from \"react\";\r\nimport Class from './ProfileStatus.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    //let stateWithSetState = useState(true) // return array\r\n    //let editMode = stateWithSetState[0] //первым элементом в массиве находится значение\r\n    //let setEditMode = stateWithSetState[1] //вторым значением находится функция кторая это значение устанавливает\r\n\r\n    //используем метод диструктуризации и присвоения (array destructuring assignment)\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || 'no status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}></input>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport Class from './Content.module.css';\r\nimport MyPostsContaner from './MyPosts/MyPostsContaner';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst Content = ({profile, status, updateUserStatus, store}) => {\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={Class.content}>\r\n         {/*<div>\r\n            <img src='https://www.swiftdigital.com.au/wp-content/uploads/2020/05/Frenchie1-min-1024x576-1.png'/>\r\n         </div>*/}\r\n         <div className={Class.profileDescription}>\r\n             <img src={profile.photos.large}/>\r\n             <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\r\n         </div>\r\n         <div className={Class.cont}>\r\n            <MyPostsContaner store={store}/>\r\n         </div>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Content from './Content'\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ContentContaner extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) { \r\n            userId = this.props.userId\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        };\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId)\r\n    \r\n    };\r\n\r\n    render() {\r\n        return <Content  {...this.props} profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus}/>\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n/*let AuthRedirectComponent = WithAuthRedirect(ContentContaner)\r\n\r\nlet whithUrlDataContanerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(whithUrlDataContanerComponent)*/\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}), withRouter)(ContentContaner)"],"sourceRoot":""}