{"version":3,"sources":["components/Nav/Nav.module.css","redux/dialogs-reducer.js","api/api.js","components/Music/Music.js","components/News/News.js","components/Setings/Setings.js","utils/object-helpers.js","redux/users-reducer.js","assets/images/user_generic2_black.png","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","redux/Selectors/Users-selectors.js","components/Users/UsersContaner.js","components/Header/Header.js","redux/auth-reduser.js","components/Header/HeaderContaner.js","components/Login/Login.jsx","components/Nav/FriendsList/FriendsList.js","components/Nav/Nav.js","components/Nav/NavContaner.js","redux/app-reduser.js","redux/sidebar-reducer.js","redux/redux-store.js","components/Hok/WithSuspence.js","App.js","serviceWorker.js","index.js","components/common/FormsControl/Forms-control.js","assets/images/831.gif","components/common/Preloader/Preloader.js","components/common/FormsControl/Forms-control.module.css","components/Header/Header.module.css","components/Nav/FriendsList/FriendsList.module.css","utils/validators/validators.js","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js"],"names":["module","exports","ADD_MESSAGE","initialState","people","name","id","photo","messages","text","_addMessage","state","newMessage","length","likesCount","addMessageActionCreator","type","dialogsReducer","action","instance","axios","withCredentials","headers","baseURL","UsersAPI","getUsers","currentPage","pageSize","get","FollowAPI","deleteFollow","userId","delete","putFollow","post","AuthAPI","authMe","login","email","password","rememberMe","logout","UserProfileAPI","setUserProfile","getUserStatus","putUserStatus","status","put","Music","News","Setings","UpdateObjectsInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","BUTTON_DISABLE","users","totalUsersCount","isFetching","buttonDisable","follow","unFollow","setCurrentPage","toggleIsFetching","toggleButtonDisable","disable","FollowUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReduser","followed","totalCount","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","console","log","onClick","p","key","e","className","Style","selectedPage","User","user","unFollowThunk","FollowThunk","to","Class","usersPhoto","src","photos","small","UsersPhoto","disabled","some","Users","usersPage","getUsersSuperSelector","createSelector","getIsFetching","getPageSize","getTotalUsersCount","getCurrentPage","getButtonDisable","UsersContaner","pageNumber","props","requestUsers","this","Preloader","componentDidMount","React","Component","compose","connect","bind","response","Header","header","headerImg","loginBlock","isAuth","Logout","SET_USER_DATA","setUserData","payload","getUserData","authReduser","HeaderComponent","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","CreateField","Input","required","style","form_summary_error","message","stopSubmit","_error","formData","FriensList","friend","profilePhoto","Nav","nav","item","active","activeClassName","friends","index","dialogsPage","INITIALIZED_SUCCES","initialized","appReduser","sidebarReducer","require","createStore","combineReducers","applyMiddleware","store","profilePage","profileReduser","dialogsReduser","sidebar","sidebarReduser","app","formReducer","thunkMiddleware","WithSuspence","Suspense","fallback","DialogsContaner","lazy","ContentContaner","App","initializeApp","NavContaner","path","render","AppContaner","withRouter","then","SamuraiJsApp","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","HasError","Styles","form_control","TextArea","restProps","child","placeholder","component","validators","validate","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","profile","_addPost","newPost","_setUserProfile","_setStatus","addPostActionCreator","setStatus","getUserProfile","updateUserStatus"],"mappings":"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","file":"static/js/main.5d5c34c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__hnmH6\",\"item\":\"Nav_item__Zzy5R\",\"active\":\"Nav_active__2ZqM-\",\"friends\":\"Nav_friends__Yn4nG\"};","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_INPUT_MESSAGE = 'UPDATE-INPUT-MESSAGE';\r\n\r\nlet initialState = {\r\n        people: [\r\n            {name: 'Hagrid', id: 1, photo: 'https://images2.minutemediacdn.com/image/upload/c_fill,w_720,ar_16:9,f_auto,q_auto,g_auto/shape/cover/entertainment/Hagrid-dcf1a1468c4d89537bb7684fd8f4fed7.jpg'},\r\n            {name: 'Harry', id: 2, photo: 'https://api.time.com/wp-content/uploads/2014/07/301386_full1.jpg'},\r\n            {name: 'Hermiona', id: 3, photo: 'https://cdn.vox-cdn.com/thumbor/3AL25v8sPmoeo9INQ-SNXM1-Iic=/0x0:1024x768/1400x1050/filters:focal(408x210:570x372):no_upscale()/cdn.vox-cdn.com/uploads/chorus_image/image/51000509/harry-potter-top-10-hermione-granger-moments-hermione-granger-358045.0.jpg'},\r\n            {name: 'Ron', id: 4, photo: 'https://upload.wikimedia.org/wikipedia/en/thumb/5/5e/Ron_Weasley_poster.jpg/220px-Ron_Weasley_poster.jpg'},\r\n        ],\r\n\r\n        messages: [\r\n            {id: 1, text: 'I love sleeping'},\r\n            {id: 2, text: 'I love exercise'},\r\n            {id: 3, text: 'I love girls'},\r\n            {id: 4, text: 'I love food'}\r\n        ]\r\n\r\n}\r\n\r\n\r\n\r\nconst _addMessage = (state, text) => {\r\n    let newMessage = {\r\n        id: state.messages[state.messages.length-1].id + 1,\r\n        text: text,\r\n        likesCount: 0\r\n    }\r\n\r\n    let stateCopy = {\r\n        ...state,\r\n        messages: [...state.messages, newMessage]\r\n    };\r\n    return stateCopy;\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    \r\n    switch(action.type) {\r\n        \r\n        case ADD_MESSAGE: \r\n            return _addMessage(state, action.text);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (text) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        text: text\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","import React from 'react'\r\nimport * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"57e26acc-6012-4baf-a78b-a7714e8a1367\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n\r\nexport const UsersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`);\r\n    }\r\n}\r\n\r\nexport const FollowAPI = {\r\n    deleteFollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    putFollow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    }\r\n}\r\n\r\nexport const AuthAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe=false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const UserProfileAPI = {\r\n    setUserProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    putUserStatus(status) {\r\n        return instance.put(`profile/status/`, {'status': status} );\r\n    }\r\n}","import React from 'react'\r\nimport Class from './Music.module.css'\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\nimport Class from './News.module.css'\r\n\r\nconst News = () => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react'\r\nimport Class from './Setings.module.css'\r\n\r\nconst Setings = () => {\r\n    return(\r\n        <div>\r\n            Setings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setings","\r\nexport const UpdateObjectsInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if(u[objPropName] === itemId){\r\n            return {...u, ...newObjProps};\r\n        }\r\n        return u\r\n    });\r\n}\r\n\r\n","import { FollowAPI, UsersAPI } from \"../api/api\";\r\nimport { UpdateObjectsInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS ='users/SET_USERS';\r\nconst SET_CURRENT_PAGE ='users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst BUTTON_DISABLE = 'users/BUTTON_DISABLE';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    buttonDisable: []\r\n\r\n}\r\n\r\nconst usersReduser = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW: \r\n            return {\r\n                ...state, \r\n                users: UpdateObjectsInArray(state.users, action.userId, \"id\", {followed: true})\r\n                /*users: state.users.map(u => {\r\n                    if(u.id === action.userId){\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })*/\r\n            };\r\n\r\n        case UNFOLLOW: \r\n            return {\r\n                ...state, \r\n                users: UpdateObjectsInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n        \r\n        case SET_USERS: \r\n            return {...state, users: action.users}\r\n\r\n        case SET_CURRENT_PAGE: \r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case SET_TOTAL_USERS_COUNT: \r\n            return {...state, totalUsersCount: action.totalCount}\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        case BUTTON_DISABLE: \r\n            return {\r\n                ...state, \r\n                buttonDisable: action.disable ? [...state.buttonDisable, action.userId] : state.buttonDisable.filter(id => id !== action.userId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId}) \r\nexport const unFollow = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleButtonDisable = (disable, userId) => ({type: BUTTON_DISABLE, disable, userId})\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {  /* getUersThunkCreator */\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage))\r\n        const response = await UsersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(response.data.items));\r\n        dispatch(setTotalUsersCount(response.data.totalCount));\r\n    }\r\n}\r\n\r\nconst FollowUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleButtonDisable(true ,userId))\r\n    const response = await apiMethod(userId);\r\n    if(response.data.resultCode === 0) {\r\n         dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleButtonDisable(false, userId))\r\n}\r\n\r\nexport const unFollowThunk = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = FollowAPI.deleteFollow.bind(FollowAPI);\r\n        let actionCreator = unFollow;\r\n        FollowUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\n\r\nexport const FollowThunk = (userId) => async (dispatch) => {\r\n    let apiMethod = FollowAPI.putFollow.bind(FollowAPI)\r\n    let actionCreator = follow;\r\n    FollowUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n}\r\n\r\nexport default usersReduser\r\n","export default __webpack_public_path__ + \"static/media/user_generic2_black.c2ec548a.png\";","import React, { useState } from 'react'\r\nimport Style from './Paginator.module.css'\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize=10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount/pageSize);\r\n    let pages = [];\r\n    for(let i = 1; i<=pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber]= useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    console.log(leftPortionNumber,rightPortionNumber)\r\n\r\n    return (\r\n        <div> \r\n            {portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber-1)}>Perv</button>}\r\n            {pages\r\n            .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n            .map((p) => {\r\n                return <span key={p} onClick={(e) => onPageChanged(p)} className={(currentPage === p && Style.selectedPage)+' '+Style.currentPage}>{p}</span>\r\n            })}\r\n            {portionNumber < portionCount && <button onClick={() => setPortionNumber(portionNumber+1)}>Next</button>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport Class from './Users.module.css'\r\nimport UsersPhoto from '../../assets/images/user_generic2_black.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nlet User = ({user, buttonDisable, unFollowThunk, FollowThunk}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img className={Class.usersPhoto} src={user.photos.small != null ? user.photos.small : UsersPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed ? \r\n                        <button disabled = {buttonDisable.some(id => id === user.id)} onClick={()=> {\r\n                            unFollowThunk(user.id);\r\n                            }}>Unfollow</button>: \r\n                        <button disabled = {buttonDisable.some(id => id === user.id)} onClick={() => {\r\n                            FollowThunk(user.id);\r\n                        }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>\r\n                            {user.name}\r\n                        </div>\r\n                         <div>\r\n                            {user.status}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <div>\r\n                            {\"user.location.country\"}\r\n                        </div>\r\n                        <div>\r\n                            {\"user.location.city\"}\r\n                        </div>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport Class from './Users.module.css'\r\nimport UsersPhoto from '../../assets/images/user_generic2_black.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\n\r\nlet Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, users, unFollowThunk, FollowThunk, buttonDisable, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage} onPageChanged={onPageChanged}/>\r\n            {users.map(u => (\r\n                <User key={u.id} user={u} buttonDisable={buttonDisable} unFollowThunk={unFollowThunk} FollowThunk={FollowThunk}/>\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const getUsers = (state) => { //примитивный селектор\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersSelector = (state) => { //селектор с фильтрацией использующий примитивный селектор\r\n    return getUsers(state).filter(u => true);\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => { //селектор содержащий логику и использующий библиотеку reselect. Так же может зависить от нескольких селекторов\r\n    return users.filter(u => true); //имитация сложной логики\r\n})\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getUsersSuperSelector2 = createSelector(getIsFetching, getUsers, (users, isFetching) => { //Так же может зависить от нескольких селекторов\r\n    return users.filter(u => true); //имитация сложной логики\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\n\r\n\r\nexport const getButtonDisable = (state) => {\r\n    return state.usersPage.buttonDisable;\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FollowThunk, unFollowThunk, requestUsers} from '../../redux/users-reducer'\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport { compose } from 'redux';\r\nimport { getPageSize, getUsersSuperSelector, getTotalUsersCount, getCurrentPage, getIsFetching, getButtonDisable} from '../../redux/Selectors/Users-selectors'\r\n\r\nclass UsersContaner extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n        /*UsersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(data.items);\r\n                this.props.setTotalUsersCount(data.totalCount);\r\n            });*/\r\n    };\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    \r\n    };\r\n\r\n    render() {\r\n        return <div> \r\n                    {this.props.isFetching \r\n                    && <Preloader/>}\r\n                    <Users totalUsersCount={this.props.totalUsersCount}\r\n                      pageSize = {this.props.pageSize}\r\n                      currentPage = {this.props.currentPage}\r\n                      selectedPage = {this.props.selectedPage}\r\n                      users = {this.props.users}\r\n                      onPageChanged = {this.onPageChanged}\r\n                      componentDidMount = {this.componentDidMount}\r\n                      unFollowThunk = {this.props.unFollowThunk}\r\n                      FollowThunk = {this.props.FollowThunk}\r\n                      buttonDisable = {this.props.buttonDisable}\r\n                      />\r\n                </div>\r\n    }\r\n}\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n\r\n        unFollow: (userId) => {\r\n            dispatch(unFollowAC(userId))\r\n        },\r\n\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageAC(currentPage))\r\n        },\r\n\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        }\r\n\r\n    }\r\n}*/\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        buttonDisable: state.usersPage.buttonDisable,\r\n    }\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        buttonDisable: getButtonDisable(state),\r\n    }\r\n}\r\n\r\n/*let withRedirect = WithAuthRedirect(UsersContaner)\r\n\r\nexport default connect(mapStateToProps, {FollowThunk, unFollowThunk, setCurrentPage, getUsers})(withRedirect);*/\r\n\r\nexport default compose(connect(mapStateToProps, {FollowThunk, unFollowThunk, requestUsers}))(UsersContaner);","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Class from './Header.module.css'\r\nimport Preloader from '../common/Preloader/Preloader'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={Class.header}>\r\n            <div className={Class.headerImg}>\r\n                <img src='https://bower.io/img/bower-logo.png' />\r\n                <div className={Class.loginBlock}>\r\n                    {props.isFetching ? <Preloader/> : null}\r\n                    {props.isAuth \r\n                    ? <div> {props.login} - <button onClick={props.Logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import { stopSubmit } from \"redux-form\";\r\nimport { AuthAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReduser = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\r\n\r\nexport const getUserData = () => async (dispatch) => { /* функция возвращающая другую функцию */\r\n    let response = await AuthAPI.authMe();\r\n    if(response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setUserData(id, email, login, true));\r\n    }        \r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => { /* функция возвращающая другую функцию */\r\n    let response = await AuthAPI.login(email, password, rememberMe);\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(getUserData());\r\n    } else {\r\n        console.log(response.data)\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n         dispatch(stopSubmit(\"login\", { _error: message }))\r\n    }\r\n}\r\n\r\nexport const Logout = () => async (dispatch) => { /* функция возвращающая другую функцию */\r\n    let response = await AuthAPI.logout();\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false)); \r\n    }\r\n}\r\n\r\nexport default authReduser;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { Logout} from '../../redux/auth-reduser'\r\n\r\nclass HeaderComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header {...this.props}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    isFetching: state.auth.isFetching\r\n})\r\n\r\nexport default connect(mapStateToProps, {Logout})(HeaderComponent);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { required } from '../../utils/validators/validators'\r\nimport { CreateField, Input } from '../common/FormsControl/Forms-control'\r\nimport {login} from '../../redux/auth-reduser'\r\nimport { Redirect } from 'react-router-dom'\r\nimport style from '../common/FormsControl/Forms-control.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                {CreateField(\"text\", \"email\", 'Email', Input, [required])}\r\n                {CreateField(\"password\", \"password\", 'Password', Input, [required])}\r\n                {CreateField('checkbox', \"rememberMe\", null, Input, null, \"Remember me\")}\r\n                {/*<div>\r\n                    <Field type=\"text\" name={\"email\"} placeholder={'Email'} component={Input} validate={[required]}/>\r\n                </div>\r\n                <div>\r\n                    <Field type=\"password\" name={\"password\"} placeholder={'Password'} component={Input} validate={[required]}/>\r\n                </div>\r\n                <div>\r\n                    <Field type={'checkbox'} name={\"rememberMe\"} component={\"input\"}/> Remember me\r\n                </div>*/}\r\n                {error && <div className = {style.form_summary_error}>\r\n                    {error}\r\n                </div>}\r\n                <div>\r\n                    <button type='submit'>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const OnSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth) { \r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={OnSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react'\r\nimport Class from './FriendsList.module.css'\r\n\r\nconst FriensList = (props) => {\r\n    return(\r\n        <div className={Class.friend}>\r\n            <div className={Class.profilePhoto}>\r\n                <img src={props.photo}/>\r\n            </div>\r\n            <div className = {Class.name}>\r\n                {props.name}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriensList","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport FriensList from './FriendsList/FriendsList'\r\nimport Class from './Nav.module.css'\r\n\r\nconst Nav = (props) => {\r\n    return(\r\n        <nav className={Class.nav}>\r\n         <div className={`${Class.item} ${Class.active}`}>\r\n           <NavLink to='/profile' activeClassName={Class.active}>Profile</NavLink>\r\n         </div>\r\n         <div className={Class.item}>\r\n           <NavLink to='/dialogs' activeClassName={Class.active}>Messages</NavLink>\r\n         </div>\r\n         <div className={Class.item}>\r\n           <NavLink to='/news' activeClassName={Class.active}>News</NavLink>\r\n         </div>\r\n         <div className={Class.item}>\r\n           <NavLink to='/music' activeClassName={Class.active}>Music</NavLink>\r\n         </div>\r\n         <div className={Class.item}>\r\n           <NavLink to='/setings' activeClassName={Class.active}>Setings</NavLink>\r\n         </div>\r\n         <div className={Class.item}>\r\n           <NavLink to='/users' activeClassName={Class.active}>Users</NavLink>\r\n         </div>\r\n         <div className={Class.item}>\r\n           <div className={Class.friends}>Friends:</div>\r\n           {props.friends.map((friends, index)=> {\r\n              return <FriensList photo={friends.photo} name={friends.name} key={friends.id}/>\r\n            })}\r\n           \r\n         </div>\r\n       </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Nav from './Nav'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    friends: state.dialogsPage.people\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Nav);","import React from 'react'\r\nimport { getUserData } from './auth-reduser'\r\n\r\nconst INITIALIZED_SUCCES = 'INITIALIZED_SUCCES';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReduser = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCES:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSucces = () => ({type: INITIALIZED_SUCCES})\r\n\r\nexport const initializeApp = () => (dispatch) => { /* функция возвращающая другую функцию */\r\n        let promise = dispatch(getUserData())\r\n        promise.then(() => {\r\n            dispatch(initializedSucces())\r\n        });\r\n      \r\n}\r\n\r\nexport default appReduser;\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import thunkMiddleware from \"redux-thunk\";\r\nimport profileReduser from './profile-reducer';\r\nimport dialogsReduser from './dialogs-reducer';\r\nimport sidebarReduser from './sidebar-reducer';\r\nimport usersReduser from './users-reducer';\r\nimport authReduser from './auth-reduser';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReduser from \"./app-reduser\";\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\n\r\n\r\nlet redusers = combineReducers({\r\n    profilePage: profileReduser,\r\n    dialogsPage: dialogsReduser,\r\n    sidebar: sidebarReduser,\r\n    usersPage: usersReduser,\r\n    auth: authReduser,\r\n    app: appReduser,\r\n    form: formReducer\r\n\r\n})\r\n\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react'\r\n\r\nexport const WithSuspence = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <React.Suspense fallback={<div>Loading...</div>}>\r\n                <Component {...props}/>\r\n            </React.Suspense>\r\n        )\r\n    };\r\n} ","import React, { Component } from 'react';\nimport './App.css';\n//import ContentContaner from './components/Content/ContentContaner';\n//import DialogsContaner from './components/Dialogs/DialogsContaner';\nimport { BrowserRouter, Route, withRouter } from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\nimport Setings from './components/Setings/Setings';\nimport UsersContaner from './components/Users/UsersContaner';\nimport HeaderComponent from './components/Header/HeaderContaner';\nimport Login from './components/Login/Login';\nimport NavContaner from './components/Nav/NavContaner';\nimport { connect, Provider } from 'react-redux';\nimport { initializeApp } from './redux/app-reduser';\nimport Preloader from './components/common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport store from './redux/redux-store';\nimport { WithSuspence } from './components/Hok/WithSuspence';\nlet DialogsContaner = React.lazy(() => import('./components/Dialogs/DialogsContaner')); // подрузит данную страницу только если пользователь сделает запрос\nlet ContentContaner = React.lazy(() => import('./components/Content/ContentContaner')); // подрузит данную страницу только если пользователь сделает запрос\n\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n\n    if(!this.props.initialized) {\n      return <Preloader/>\n    }\n\n    return (\n      \n        <div className='app-wraper'>\n          <HeaderComponent/>\n          <NavContaner/>\n          <div className='app-wraper-content'>\n            <Route path='/dialogs' render={WithSuspence(DialogsContaner)}/>\n            <Route path='/profile/:userId?' render={WithSuspence(ContentContaner)}/>\n            <Route path='/music' render={ () => <Music/>}/>\n            <Route path='/news' render={ () => <News/>}/>\n            <Route path='/setings' render={ () => <Setings/>}/>\n            <Route path='/users' render={ () => <UsersContaner/>}/>\n            <Route path='/login' render={ () => <Login/>}/>\n          </div>\n        </div>\n      \n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\n//export default compose(withRouter, connect(null, {getUserData}))(App);\nlet AppContaner = compose(withRouter,connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJsApp = (props) => {\n  return <BrowserRouter>\n            <Provider store={store}>\n              <AppContaner/>\n            </Provider>\n         </BrowserRouter>\n}\n\nexport default SamuraiJsApp\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store'\nimport { Provider } from 'react-redux';\nimport SamuraiJsApp from './App';\n\n  ReactDOM.render(\n        <SamuraiJsApp />, document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\r\nimport { Field } from 'redux-form';\r\nimport Styles from './Forms-control.module.css'\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n\r\n    const HasError = touched && error;\r\n\r\n    return(\r\n        <div className={Styles.form_control + \" \" + (HasError? Styles.error : \"\" )}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {HasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps}/> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps}/> </FormControl>\r\n}\r\n\r\nexport const CreateField = (type, name, placeholder, component, validators, props, text) => (\r\n    <div>\r\n        <Field type={type} name={name} placeholder={placeholder} component={component} validate={validators} {...props}/> {text}\r\n    </div>\r\n)","export default __webpack_public_path__ + \"static/media/831.802470e9.gif\";","import React from 'react'\r\nimport preloader from '../../../assets/images/831.gif'\r\n\r\nlet Preloader = (props) => {\r\n    return <div> \r\n             <img src={preloader}/>\r\n        </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"Forms-control_form_control__2NgSy\",\"error\":\"Forms-control_error__375OK\",\"form_summary_error\":\"Forms-control_form_summary_error__2heAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1ek1f\",\"loginBlock\":\"Header_loginBlock__3u8MT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePhoto\":\"FriendsList_profilePhoto__Dyfcv\",\"friend\":\"FriendsList_friend__TOuxn\",\"name\":\"FriendsList_name__1dIVu\"};","export const required = value => {\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__3R2en\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3DpGW\",\"currentPage\":\"Paginator_currentPage__3EMyx\"};","import { UserProfileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\n\r\nlet initialState = {\r\n        posts: [\r\n            {id: 1, text: 'post about TicTok', likesCount: 2},\r\n            {id: 2, text: 'post about apple', likesCount: 3},\r\n            {id: 3, text: 'post about google', likesCount: 5},\r\n            {id: 4, text: 'post about instagram', likesCount: 7}\r\n        ],\r\n        profile: null,\r\n        status: ''\r\n}\r\n\r\nconst _addPost = (state, text) => {\r\n    let newPost = {\r\n        id: state.posts[state.posts.length-1].id + 1,\r\n        text: text,\r\n        likesCount: 0\r\n    }\r\n\r\n    let stateCopy = {\r\n        ...state,\r\n        posts: [...state.posts, newPost]\r\n    };\r\n    return stateCopy;\r\n}\r\n\r\nconst _setUserProfile = (state, profile) => {\r\n    let stateCopy = {\r\n        ...state,\r\n        profile: profile\r\n    }\r\n    return stateCopy;\r\n}\r\n\r\nconst _setStatus = (state, status) => {\r\n    let stateCopy = {\r\n        ...state,\r\n        status: status\r\n    }\r\n    return stateCopy;\r\n}\r\n\r\nconst profileReduser = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case ADD_POST: \r\n            return _addPost(state, action.newPost);\r\n        case SET_USER_PROFILE: \r\n            return _setUserProfile(state, action.profile);\r\n        case SET_STATUS:\r\n            return _setStatus(state, action.status);\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPost) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPost\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        const response = await UserProfileAPI.setUserProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n    }\r\n}\r\n\r\nexport const getUserStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        if(!userId) userId = 2;\r\n        const response = await UserProfileAPI.getUserStatus(userId);\r\n        dispatch(setStatus(response.data));\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await UserProfileAPI.putUserStatus(status);\r\n    if(response.data.resultCode === 0 ){\r\n        dispatch(setStatus(status));\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default profileReduser;"],"sourceRoot":""}