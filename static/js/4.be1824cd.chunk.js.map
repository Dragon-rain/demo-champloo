{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Messsages/Messages.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Hok/WithAuthRedirect.js","components/Dialogs/Messsages/Messages.js","components/Dialogs/Dialog/Dialog.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContaner.js"],"names":["module","exports","mapStateToPropsforRedirect","state","isAuth","auth","Messages","props","className","Class","message","text","Dialog","dialog","active","to","id","name","MaxLength20","maxLengthCreator","MesageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","Dialogs","dialogs","dialogsItem","people","map","key","messages","formData","mesage","addMessage","console","log","compose","connect","dialogsPage","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,0B,oBCA/KD,EAAOC,QAAU,CAAC,QAAU,4B,oBCA5BD,EAAOC,QAAU,CAAC,OAAS,yB,4HCGvBC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,oCCORE,EATE,SAACC,GACd,OACI,yBAAKC,UAAWC,IAAMC,SACjBH,EAAMI,O,0BCMJC,EARA,SAACL,GACZ,OACI,yBAAKC,UAAWC,IAAMI,OAAS,IAAMJ,IAAMK,QACvC,kBAAC,IAAD,CAASC,GAAI,YAAcR,EAAMS,IAAKT,EAAMU,Q,iCCClDC,EAAcC,YAAiB,IAgB/BC,EAAkBC,YAAU,CAACC,KAAM,UAAjBD,EAdJ,SAACd,GAEjB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOR,KAAM,SAAUS,UAAWC,IAAUC,YAAY,aAAaC,SAAU,CAACC,IAAUZ,MAE9F,6BACI,6CAoCDa,EA5BC,SAACxB,GAWb,OACI,yBAAKC,UAAWC,IAAMuB,SAClB,yBAAKxB,UAAWC,IAAMwB,aACjB1B,EAAMJ,MAAM+B,OAAOC,KAAI,SAAAD,GACpB,OAAO,kBAAC,EAAD,CAAQjB,KAAMiB,EAAOjB,KAAMD,GAAIkB,EAAOlB,GAAIoB,IAAKF,EAAOlB,SAGrE,yBAAKR,UAAWC,IAAM4B,UACjB9B,EAAMJ,MAAMkC,SAASF,KAAI,SAAAzB,GACtB,OAAO,kBAAC,EAAD,CAAUC,KAAMD,EAAQC,KAAMyB,IAAK1B,EAAQM,SAG1D,kBAACI,EAAD,CAAiBG,SAjBR,SAACe,GAJD,IAAC3B,IAKH2B,EAASC,OAJpBhC,EAAMiC,WAAW7B,GAKjB8B,QAAQC,IAAIJ,EAASC,aCWdI,4BAAQC,aAnBD,SAACzC,GACnB,MAAO,CACHA,MAAOA,EAAM0C,gBAII,SAACC,GACtB,MAAO,CACHN,WAAY,SAAC7B,GACTmC,EAASC,YAAwBpC,UJ3Bb,SAACqC,GAAe,IACtCC,EADqC,uKAGnC,OAAIC,KAAK3C,MAAMH,OACR,kBAAC4C,EAAcE,KAAK3C,OADG,kBAAC,IAAD,CAAUQ,GAAM,eAHX,GACXoC,IAAMH,WAStC,OAFqCJ,YAAQ1C,EAAR0C,CAAoCK,KI6B9DN,CAAwEZ","file":"static/js/4.be1824cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3mycB\",\"dialogsItem\":\"Dialogs_dialogsItem__1C1I_\",\"dialog\":\"Dialogs_dialog__1XJbz\",\"messages\":\"Dialogs_messages__oB0qp\",\"active\":\"Dialogs_active__2Bjp-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Messages_message__v2Nnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__3O1YW\"};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n \r\nlet mapStateToPropsforRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to = {\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsforRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n} ","import React from 'react'\r\nimport Class from './Messages.module.css'\r\n\r\nconst Messages = (props) => {\r\n    return(\r\n        <div className={Class.message}>\r\n            {props.text}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Messages","import React from 'react' \r\nimport Class from './Dialog.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Dialog = (props) => {\r\n    return(\r\n        <div className={Class.dialog + ' ' + Class.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog","import React from 'react'\r\nimport Class from './Dialogs.module.css'\r\nimport Messages from './Messsages/Messages'\r\nimport Dialog from './Dialog/Dialog'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\r\nimport { TextArea } from '../common/FormsControl/Forms-control'\r\n\r\nconst MaxLength20 = maxLengthCreator(20);\r\n\r\nconst DialogsForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"mesage\"} component={TextArea} placeholder=\"new mesage\" validate={[required, MaxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n} \r\n\r\nconst MesageReduxForm = reduxForm({form: 'mesage'})(DialogsForm)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let addMessage = (text) => {\r\n        props.addMessage(text);\r\n    }\r\n\r\n    const OnSubmit = (formData) => {\r\n        addMessage(formData.mesage);\r\n        console.log(formData.mesage);\r\n    }\r\n\r\n    return (\r\n        <div className={Class.dialogs}>\r\n            <div className={Class.dialogsItem}>\r\n                {props.state.people.map(people => {\r\n                    return <Dialog name={people.name} id={people.id} key={people.id}/>\r\n                })}\r\n            </div>\r\n            <div className={Class.messages}>\r\n                {props.state.messages.map(message => {\r\n                    return <Messages text={message.text} key={message.id}/>\r\n                })}\r\n            </div>\r\n            <MesageReduxForm onSubmit={OnSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { addMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport { WithAuthRedirect } from '../Hok/WithAuthRedirect';\r\nimport Dialogs from './Dialogs'\r\n\r\n/*const DialogsContaner = (props) => {\r\n    return (\r\n        <StoreContext.Consumer>\r\n        { store => {\r\n            let state = store.getState().dialogsPage;\r\n\r\n            let addMessage = () => {\r\n                store.dispatch(addMessageActionCreator());\r\n            }\r\n        \r\n            let newText = (text) => {\r\n                store.dispatch(updateInputMessageActionCreator(text));\r\n            }    \r\n            return <Dialogs updateInputMessage={newText} addMessage={addMessage} state={state}/>\r\n            }\r\n        }\r\n        </StoreContext.Consumer>\r\n    )\r\n}*/\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (text) => {\r\n            dispatch(addMessageActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\n/*let AuthRedirectComponent = WithAuthRedirect(Dialogs)\r\n\r\nconst DialogsContaner = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);*/\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Dialogs)"],"sourceRoot":""}